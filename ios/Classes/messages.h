// Autogenerated from Pigeon (v0.1.21), do not edit directly.
// See also: https://pub.dev/packages/pigeon
#import <Foundation/Foundation.h>
@protocol FlutterBinaryMessenger;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

@class FPNTriggerRegisterArg;
@class FPNIosRegisterCallbackArg;
@class FPNAndroidOnRegisterSucceedCallbackArg;
@class FPNAndroidGetRegisterIdCallbackArg;

@interface FPNTriggerRegisterArg : NSObject
@property(nonatomic, copy, nullable) NSString * androidDefaultPlatform;
@end

@interface FPNIosRegisterCallbackArg : NSObject
@property(nonatomic, strong, nullable) NSNumber * success;
@property(nonatomic, copy, nullable) NSString * deviceToken;
@property(nonatomic, copy, nullable) NSString * errorMessage;
@end

@interface FPNAndroidOnRegisterSucceedCallbackArg : NSObject
@property(nonatomic, copy, nullable) NSString * platformName;
@property(nonatomic, copy, nullable) NSString * regId;
@end

@interface FPNAndroidGetRegisterIdCallbackArg : NSObject
@property(nonatomic, strong, nullable) NSNumber * success;
@property(nonatomic, copy, nullable) NSString * platformName;
@property(nonatomic, copy, nullable) NSString * regId;
@end

@protocol FPNFlutterPushNotificationHostApi
-(void)triggerRegister:(FPNTriggerRegisterArg*)input error:(FlutterError *_Nullable *_Nonnull)error;
-(void)androidGetRegisterId:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void FPNFlutterPushNotificationHostApiSetup(id<FlutterBinaryMessenger> binaryMessenger, id<FPNFlutterPushNotificationHostApi> _Nullable api);

@interface FPNFlutterPushNotificationFlutterApi : NSObject
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger;
- (void)iosRegisterCallback:(FPNIosRegisterCallbackArg*)input completion:(void(^)(NSError* _Nullable))completion;
- (void)androidOnRegisterSucceedCallback:(FPNAndroidOnRegisterSucceedCallbackArg*)input completion:(void(^)(NSError* _Nullable))completion;
- (void)androidGetRegisterIdCallback:(FPNAndroidGetRegisterIdCallbackArg*)input completion:(void(^)(NSError* _Nullable))completion;
@end
NS_ASSUME_NONNULL_END
